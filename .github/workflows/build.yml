name: Build

on: [push]

jobs:
  # Linux, MacOS
  build-unix:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-20.04
            name: 'Linux 64'
            output: 'libtesseract64.so'
            cmake_args: '-G "Unix Makefiles"'
            sw_args: '-platform x64'  
            
          - os: macos-latest
            name: 'MacOS 64'
            output: 'libtesseract64.dylib'
            cmake_args: '-G "Unix Makefiles"'
            sw_args: '-platform x64 -os macos-10.13'
    
    steps:
      - uses: actions/checkout@v2.3.4
        
      - name: Cache
        id: cache
        uses: actions/cache@v2.1.6
        with: 
          key: ${{ matrix.config.name }}${{ matrix.config.sw_args }}
          path: |
            libs
            headers

      - name: Download Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.9'
          
      - name: Download Tesseract
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2.3.4
        with:
          repository: tesseract-ocr/tesseract
          path: tesseract
           
      - name: Download sw
        if: steps.cache.outputs.cache-hit != 'true'
        uses: egorpugin/sw-action@master

      - name: Build Tesseract
        working-directory: tesseract
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mv -f ../sw.cpp sw.cpp
          ../sw ${{ matrix.config.sw_args }} -storage-dir=storage -static -static-dependencies -config r build
          
      - name: Find
        shell: python
        run: |
          import os
          from pathlib import Path
          from distutils.file_util import copy_file
          
          libs = ['leptonica', 'zstd', 'png', 'jpeg', 'zlib', 'jbig', 'tiff', 'openjpeg' ,'webp', 'libtesseract', 'lzma', 'gif']
          
          os.makedirs('libs', exist_ok=True)
          os.makedirs('headers/tesseract', exist_ok=True)
          
          for filename in list(Path('tesseract').glob('**/*.a')):
          	for lib in libs:
          		if lib in str(filename):
          			copy_file(filename, os.path.join('libs', os.path.basename(filename)))
          			
          for filename in list(Path('tesseract').glob('**/include/tesseract/*.h')) + list(Path('tesseract').glob('**/tesseract/version.h')):
          	copy_file(filename, os.path.join('headers/tesseract', os.path.basename(filename)))
          	
          for filename in list(Path('libs').glob('**/*')) + list(Path('headers').glob('**/*')):
            print(filename)
          
      - name: Build Plugin
        continue-on-error: true
        run: |
          cmake -S . ${{ matrix.config.cmake_args }}
          cmake --build . --config Release
          
      - uses: actions/upload-artifact@v2.2.4
        with:
          path: ${{ matrix.config.output }}
  
  # Windows        
  build-windows:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-latest
            name: 'Windows 32'
            output: 'libtesseract32.dll'
            cmake_args: '-G "MinGW Makefiles"'
            sw_args: '-compiler=gcc -os mingw -platform x86 -win-mt'
        
          - os: windows-latest
            name: 'Windows 64'
            output: 'libtesseract64.dll'
            cmake_args: '-G "MinGW Makefiles"'
            sw_args: '-compiler=gcc -os mingw -platform x64 -win-mt'  
    
    steps:
      - uses: actions/checkout@v2.3.4
        
      - name: Cache
        id: cache
        uses: actions/cache@v2.1.6
        with: 
          key: ${{ matrix.config.name }}${{ matrix.config.sw_args }}
          path: |
            libs
            headers

      - name: Download Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.9'
          
      - name: Dependencies - Windows 64
        if: matrix.config.name == 'Windows 64'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: mingw-w64-x86_64-gcc mingw-w64-x86_64-make mingw-w64-x86_64-cmake
          update: false
          
      - name: Dependencies - Windows 32
        if: matrix.config.name == 'Windows 32'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          install: mingw-w64-i686-gcc mingw-w64-i686-make mingw-w64-i686-cmake
          update: false          
          
      - name: Download Tesseract
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v2.3.4
        with:
          repository: tesseract-ocr/tesseract
          path: tesseract
           
      - name: Download sw
        if: steps.cache.outputs.cache-hit != 'true'
        uses: egorpugin/sw-action@master

      - name: Build Tesseract
        working-directory: tesseract
        shell: msys2 {0}
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mv -f ../sw.cpp sw.cpp
          ../sw ${{ matrix.config.sw_args }} -storage-dir=storage -static -static-dependencies -config r build
          
      - name: Find
        shell: python
        run: |
          import os
          from pathlib import Path
          from distutils.file_util import copy_file
          
          libs = ['leptonica', 'zstd', 'png', 'jpeg', 'zlib', 'jbig', 'tiff', 'openjpeg' ,'webp', 'libtesseract', 'lzma', 'gif']
          
          os.makedirs('libs', exist_ok=True)
          os.makedirs('headers/tesseract', exist_ok=True)
          
          for filename in list(Path('tesseract').glob('**/*.lib')):
          	for lib in libs:
          		if lib in str(filename):
          			copy_file(filename, os.path.join('libs', os.path.basename(filename)))
          			
          for filename in list(Path('tesseract').glob('**/include/tesseract/*.h')) + list(Path('tesseract').glob('**/tesseract/version.h')):
          	copy_file(filename, os.path.join('headers/tesseract', os.path.basename(filename)))
          	
          for filename in list(Path('libs').glob('**/*')) + list(Path('headers').glob('**/*')):
            print(filename)
          
      - name: Build Plugin
        continue-on-error: true
        shell: msys2 {0}
        run: |
          cmake -S . ${{ matrix.config.cmake_args }}
          cmake --build . --config Release
          
      - uses: actions/upload-artifact@v2.2.4
        with:
          path: ${{ matrix.config.output }}