name: Build

on: [push]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-latest
            name: 'Windows 32'
            output: 'libtesseract32.dll'
            cmake_args: '-G "Visual Studio 16 2019" -A Win32'
            sw_args: '-platform x86 -win-mt'
            platform: 'x32'

          - os: windows-latest
            name: 'Windows 64'
            output: 'libtesseract64.dll'
            cmake_args: '-G "Visual Studio 16 2019"'
            sw_args: '-platform x64 -win-mt'

          - os: ubuntu-20.04
            name: 'Linux 64'
            output: 'libtesseract64.so'
            cmake_args: '-G "Unix Makefiles"'
            sw_args: '-platform x64'
            
          - os: macos-latest
            name: 'MacOS 64'
            output: 'libtesseract64.dylib'
            cmake_args: '-G "Unix Makefiles"'
            sw_args: '-platform x64 -os macos-10.13'

    steps:
      - uses: actions/checkout@v2
      - uses: egorpugin/sw-action@master

      - name: Cache
        id: cache
        uses: actions/cache@v2.1.1
        with:
          path: storage
          key: ${{ matrix.config.name }}${{ matrix.config.sw_args }}

      - name: Build Tesseract
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          ./sw build ${{ matrix.config.sw_args }} -storage-dir=storage -static -static-dependencies -config r org.sw.demo.google.tesseract.tesseract-master

      - name: Extract Headers & Libraries
        run: |
          mkdir -p libs
          find "storage/pkg/" -name "*.a" -exec cp "{}" "libs" \;
          find "storage/pkg/" -name "*.lib" -exec cp "{}" "libs" \;
          
          mkdir -p leptonica
          leptonica=$(find "storage/pkg/" -name "allheaders.h" -exec dirname {} \; -quit)
          find "$leptonica" -name "*.h*" -exec cp "{}" leptonica/ \;
          find "storage/pkg/" -name "*endianness.h*" -exec cp "{}" leptonica/ \;
          
          mkdir -p tesseract
          tesseract=$(find "storage/pkg/" -name "baseapi.h" -exec dirname {} \; -quit)
          find "$tesseract" -name "*.h*" -exec cp "{}" tesseract/ \;
          find "storage/pkg/" -wholename "*tesseract/version.h" -exec cp "{}" tesseract/ \;

      - name: Build Plugin
        run: |
          cmake -S . ${{ matrix.config.cmake_args }}
          cmake --build .  --config Release
          find . -name libtesseract.binary -exec cp "{}" ${{ matrix.config.output }} \;

      - uses: actions/upload-artifact@v2
        with:
          path: ${{ matrix.config.output }}